                                Installation & Project Setup
https://laravel.com/docs/7.x/authentication

Initial Project Setup
    Tạm thời tắt phần mềm diệt virut và cài đặt project laravel
        composer create-project --prefer-dist laravel/laravel vuejs_resful
        Để vào được trang web của dự án thì cần truy cập vào trong folder public, để có thể xóa
        được public trên link url thì có thể dùng virtual host
        <VirtualHost *:80>
            ServerAdmin vuejs_resful.xyz
            DocumentRoot "C:/xampp/htdocs/vuejs_resful/public"
            ServerName vuejs_resful.xyz
            ErrorLog "logs/vuejs_resful.xyz-error.log"
            CustomLog "logs/vuejs_resful.xyz-access.log" common
        </VirtualHost>
    - Remove public trên URL
    C:\Windows\System32\drivers\etc -----------> hosts
        127.0.0.1       vuejs_resful.xyz
Intall authentication system
    https://laravel.com/docs/7.x/authentication
    composer require laravel/ui
    php artisan ui vue --auth
    php artisan serve
    npm install
    npm run watch
        -> Ở public folder các file css và js được tạo ra
Database Configuration
    php artisan migrate
Create Migration Table
    php artisan make:migration create_products_table --create=products
    php artisan migrate
Add Controller Model ,Route
    php artisan make:controller ProductController
    php artisan make:controller Test --resource
    php artisan make:model Product
Setup Page Layouts
    bootstrap cdn
Read All Data From Database 1
Read All Data From Database 2
Insert Data in Database 1
Insert Data in Database 2
Edit Data In to Database 1
Edit Data In to Database 2
Delete Data from Database
Create Product Details Page
Paginat in Details Page
Add Limit in Description
    composer require laravel/helpers

=======================================================================================================

                                    VueJs Basic Fundamentals

Setup Support and Elements
VueJs Methods
VueJs One way Data Binding
VueJs Events
VueJs Event Objects
VueJs Keyboard Events
VueJs Two Way Data Binding
VueJs Modifiers
    event click.alt -> Alt + Click
VueJs V if , v elseif etc
VueJs V For
VueJs Vue CLI
    vue cli
        npm install -g @vue/cli
        check after install: vue --version
    Creating a Project
        vue create vue
    cd vue
    npm run serve
VueJs Components Vuefiles
VueJs Data Function
VueJs Nested Components
VueJs CSS Skoped
VueJs Props
VueJs Custome Event
VueJs Lifecycle Hook
VueJs Axios Request
    npm install axios --save
    jsonplaceholder
        https://jsonplaceholder.typicode.com/
VueJs Filter
VueJs Custome Search
VueJs Router and Project Create
    npm install -g @vue/cli
    vue create mvue
    vue add router
VueJs Setting Routes
VueJs Routere Links
VueJs Router Parameter
VueJs Router Object
VueJs More Router Links
VueJs Dynamic Redirect Mode
VueJs Active Link

=======================================================================================================

                                    Restful API Basic Fundamentals
RestAPI API php,Web php,Channels php,Console php
    composer create-project --prefer-dist laravel/laravel:^7.0 rapi
    php artisan serve
    http://127.0.0.1:8000
    DB_DATABASE=rapi
    AppServiceProvider.php
        use Illuminate\Support\Facades\Schema;
        Schema::defaultStringLength(191);
    php artisan migrate
RestAPI MCR,First Route and Method
    php artisan make:migration create_sclasses_table --create=sclasses
    php artisan migrate
    php artisan make:model Model/Sclass
    php artisan make:controller Api/SclassController --resource
    http://127.0.0.1:8000/api/class
RestAPI Class CRUD 1
    php artisan r:l
    Postman: 
        Accept: application/json 
        Content-Type: application/json
    GET api/class class.index App\Http\Controllers\Api\SclassController@index
    POST api/class class.store App\Http\Controllers\Api\SclassController@store
RestAPI Class CRUD 2
    DELETE api/class/{class} class.destroy
    GET api/class/{class} class.show
    PUT|PATCH api/class/{class} class.update
    vuejs_resful.xyz
RestAPI Subject CRUD 1
    php artisan make:model Model/Subject
    php artisan make:controller Api/SubjectController --resource
    php artisan make:migration create_subjects_table --create=subjects 
    php artisan migrate
    php artisan r:l
    POST api/subject Api\SubjectController@store
     GET|HEAD api/subject SubjectController@index
RestAPI Subject CRUD 2
    GET|HEAD api/subject/{subject} SubjectController@show 
    DELETE api/subject/{subject} SubjectController@destroy
RestAPI Section CRUD 1
    php artisan make:migration create_sections_table --create=sections
    php artisan migrate
    php artisan make:model Model/Section 
    php artisan make:controller Api/SectionController --resource
RestAPI Section CRUD 2
RestAPI Student CRUD 1
    php artisan make:migration create_students_table --create=students
    php artisan migrate
    php artisan make:model Model/Student
    php artisan make:controller Api/StudentController --resource
RestAPI Student CRUD 2
RestAPi JWT Token Login Method
    https://jwt-auth.readthedocs.io/en/docs/ -> laravel-installation
    https://www.positronx.io/laravel-jwt-authentication-tutorial-user-login-signup-api/
    composer require tymon/jwt-auth
    'providers' => [

        ...

        Tymon\JWTAuth\Providers\LaravelServiceProvider::class,
    ]
    Publish the config: 
        php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"
    Generate secret key
        php artisan jwt:secret
    Update User model
    Configure Auth guard
    Add some basic authentication routes
    Create the AuthController
        php artisan make:controller AuthController
    php artisan cache:clear
    php artisan config:cache
    http://vuejs_resful.xyz/api/auth/login
RestAPi JWT Me and Logout Method
    pwd: Hash::make('123456')
    api http://vuejs_resful.xyz/api/auth/me
        email: quang@gmail.com
        password: 123456
        Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC92dWVqc19yZXNmdWwueHl6XC9hcGlcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjAwNDgzNzk1LCJleHAiOjE2MDA0ODczOTUsIm5iZiI6MTYwMDQ4Mzc5NSwianRpIjoic0dsT3o5dDhtV1hhRGt5ZyIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.tloDZHwwlLzZRpoPSTR5s-EPP8ilN5hYOF1iFFNtMtI
RestAPI Signup
    name 
    email 
    password
    password_confirmation

=======================================================================================================

                                    Create Inventory Management System  Project

Laravel 7 Project Install
    Project name: laravel-vue-master 
    phpinfo();
        PHP Version 7.3.12
    composer create-project --prefer-dist laravel/laravel:^7.0 laravel-vue-master
    composer require laravel/ui:^2.4
    php artisan ui vue --auth
    Database: inventory 
    use Illuminate\Support\Facades\Schema;
    Schema::defaultStringLength(191);
    php artisan migrate
Project NPM,Vue Router Install
    check nodejs: npm -v 
    npm install 
    laravel vue router
        https://router.vuejs.org/installation.html#npm
        npm install vue-router
            -> node_modules/vue-router
    npm run dev
        -> Ở public folder các file css và js được tạo ra
    Remove 
        web.php:
            Auth::routes();
            Route::get('/home', 'HomeController@index')->name('home');
        resources: 
            home.blade.php
    
=======================================================================================================

                                Project Admin Template Setting
        
Project Admin Template Setting
    https://router.vuejs.org/guide/
    RuangAdmin
        git clone https://github.com/indrijunanda/RuangAdmin.git
    <link rel="stylesheet" type="text/css" href="{{ asset('css/app.css')}}">
    <script src="{{ asset('js/app.js')}}"></script>
    app.js
        import Vue from 'vue'
        import VueRouter from 'vue-router'
        Vue.use(VueRouter)
Project Routes,Component, Mode
    npm run dev 
    npm run watch 
    http://vuejs_resful.xyz/#/register
    mode: 'history'
    Route::get('/{vue_capture?}',function () {
            return view('welcome');
        })->where('vue_capture', '[\/\w\.-]*');
Project Login,Register,Forget Password Page Setup

=======================================================================================================

                                Implement JWT Token for Login Authentication

Project JWT Implement
    composer update
    https://jwt-auth.readthedocs.io/en/docs/ -> laravel-installation
    https://www.positronx.io/laravel-jwt-authentication-tutorial-user-login-signup-api/
    composer require tymon/jwt-auth
    'providers' => [

        ...

        Tymon\JWTAuth\Providers\LaravelServiceProvider::class,
    ]
    Publish the config: 
        php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"
            -> config/jwt.php
    Generate secret key
        php artisan jwt:secret
    Update User model
    Configure Auth guard
    Add some basic authentication routes
    Create the AuthController
        php artisan make:controller AuthController
    php artisan cache:clear
    php artisan config:cache
    http://vuejs_resful.xyz/api/auth/login
Project JWT Check and Signup 1
    password as (123456): $2y$10$BcDmk50XctV/Y5IfOaOto.ZsE7GtUnx0a3CQdmTCcC95vvt/hoWIi
    http://vuejs_resful.xyz/api/auth/login
        Accept: application/json
        Content-Type: application/x-www-form-urlencoded
        email: admin@gmail.com
        password: 123456
    http://vuejs_resful.xyz/api/auth/me
        Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC92dWVqc19yZXNmdWwueHl6XC9hcGlcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjAwNDgzNzk1LCJleHAiOjE2MDA0ODczOTUsIm5iZiI6MTYwMDQ4Mzc5NSwianRpIjoic0dsT3o5dDhtV1hhRGt5ZyIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.tloDZHwwlLzZRpoPSTR5s-EPP8ilN5hYOF1iFFNtMtI
    http://vuejs_resful.xyz/api/auth/logout 
Project JWT Check and Signup 2 
    http://vuejs_resful.xyz/api/auth/signup
    email
    name
    password
    password_confirmation
    http://vuejs_resful.xyz/api/auth/me
        check result 
Project JWT Middleware
    php artisan make:middleware JWT 
        -> Http/Middleware/JWT.php 
    Kernel.php 
        'JWT' => \App\Http\Middleware\JWT::class,
Project Login with Token
    npm run watch
    res.data
    error.response.data
Project Helper Class
Project Helper Token
    return payload.iss = "http://vuejs_resful.xyz/api/auth/login" || "http://vuejs_resful.xyz/api/auth/signup" ? true : false
        -> token is come from 
Project Helper User
    Bind classes to Global Scope in ES6
    import User from './Helpers/User';
    window.User = User;
Project STore Token
    id: payload.sub 

=======================================================================================================

                                Create Components for Admin
    
Home Component After Login 1
    php artisan cache:clear
    php artisan config:cache
Home Component After Login 2
Project Validation , Errors 1
    sweetalert 
    https://sweetalert2.github.io/
    npm install sweetalert2
    Usage
        import Swal from 'sweetalert2'
        window.Swal = Swal;
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            onOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        });
        window.Toast = Toast;
Project Validation , Errors 2
Project Register,Logout 1
Project Register,Logout 2
Project Mastering Sidebar Topbar
    v-show
        Toggles the element’s display CSS property based on the truthy-ness of the expression value.
        This directive triggers transitions when its condition changes.
    
=======================================================================================================

                                Create CRUD for Employee
Install Noty in Project
    noty
    https://ned.im/noty/#/
    npm install noty
    Add to resources/sass/app.scss
        @import "~noty/src/noty.scss";
        @import "~noty/src/themes/mint.scss";
    Add to resources/js/bootstrap.js
    npm run dev
Employee Module
Component Load 1
