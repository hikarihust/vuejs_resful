                                Installation & Project Setup
https://laravel.com/docs/7.x/authentication

Initial Project Setup
    Tạm thời tắt phần mềm diệt virut và cài đặt project laravel
        composer create-project --prefer-dist laravel/laravel vuejs_resful
        Để vào được trang web của dự án thì cần truy cập vào trong folder public, để có thể xóa
        được public trên link url thì có thể dùng virtual host
        <VirtualHost *:80>
            ServerAdmin vuejs_resful.xyz
            DocumentRoot "C:/xampp/htdocs/vuejs_resful/public"
            ServerName vuejs_resful.xyz
            ErrorLog "logs/vuejs_resful.xyz-error.log"
            CustomLog "logs/vuejs_resful.xyz-access.log" common
        </VirtualHost>
    - Remove public trên URL
    C:\Windows\System32\drivers\etc -----------> hosts
        127.0.0.1       vuejs_resful.xyz
Intall authentication system
    https://laravel.com/docs/7.x/authentication
    composer require laravel/ui
    php artisan ui vue --auth
    php artisan serve
    npm install
    npm run watch
        -> Ở public folder các file css và js được tạo ra
Database Configuration
    php artisan migrate
Create Migration Table
    php artisan make:migration create_products_table --create=products
    php artisan migrate
Add Controller Model ,Route
    php artisan make:controller ProductController
    php artisan make:controller Test --resource
    php artisan make:model Product
Setup Page Layouts
    bootstrap cdn
Read All Data From Database 1
Read All Data From Database 2
Insert Data in Database 1
Insert Data in Database 2
Edit Data In to Database 1
Edit Data In to Database 2
Delete Data from Database
Create Product Details Page
Paginat in Details Page
Add Limit in Description
    composer require laravel/helpers

=======================================================================================================

                                    VueJs Basic Fundamentals

Setup Support and Elements
VueJs Methods
VueJs One way Data Binding
VueJs Events
VueJs Event Objects
VueJs Keyboard Events
VueJs Two Way Data Binding
VueJs Modifiers
    event click.alt -> Alt + Click
VueJs V if , v elseif etc
VueJs V For
VueJs Vue CLI
    vue cli
        npm install -g @vue/cli
        check after install: vue --version
    Creating a Project
        vue create vue
    cd vue
    npm run serve
VueJs Components Vuefiles
VueJs Data Function
VueJs Nested Components
VueJs CSS Skoped
VueJs Props
VueJs Custome Event
VueJs Lifecycle Hook
VueJs Axios Request
    npm install axios --save
    jsonplaceholder
        https://jsonplaceholder.typicode.com/
VueJs Filter
VueJs Custome Search
VueJs Router and Project Create
    npm install -g @vue/cli
    vue create mvue
    vue add router
VueJs Setting Routes
VueJs Routere Links
VueJs Router Parameter
VueJs Router Object
VueJs More Router Links
VueJs Dynamic Redirect Mode
VueJs Active Link

=======================================================================================================

                                    Restful API Basic Fundamentals
RestAPI API php,Web php,Channels php,Console php
    composer create-project --prefer-dist laravel/laravel:^7.0 rapi
    php artisan serve
    http://127.0.0.1:8000
    DB_DATABASE=rapi
    AppServiceProvider.php
        use Illuminate\Support\Facades\Schema;
        Schema::defaultStringLength(191);
    php artisan migrate
RestAPI MCR,First Route and Method
    php artisan make:migration create_sclasses_table --create=sclasses
    php artisan migrate
    php artisan make:model Model/Sclass
    php artisan make:controller Api/SclassController --resource
    http://127.0.0.1:8000/api/class
RestAPI Class CRUD 1
    php artisan r:l
    Postman: 
        Accept: application/json 
        Content-Type: application/json
    GET api/class class.index App\Http\Controllers\Api\SclassController@index
    POST api/class class.store App\Http\Controllers\Api\SclassController@store
RestAPI Class CRUD 2
    DELETE api/class/{class} class.destroy
    GET api/class/{class} class.show
    PUT|PATCH api/class/{class} class.update
    vuejs_resful.xyz
RestAPI Subject CRUD 1
    php artisan make:model Model/Subject
    php artisan make:controller Api/SubjectController --resource
    php artisan make:migration create_subjects_table --create=subjects 
    php artisan migrate
    php artisan r:l
    POST api/subject Api\SubjectController@store
     GET|HEAD api/subject SubjectController@index
RestAPI Subject CRUD 2
    GET|HEAD api/subject/{subject} SubjectController@show 
    DELETE api/subject/{subject} SubjectController@destroy
RestAPI Section CRUD 1
    php artisan make:migration create_sections_table --create=sections
    php artisan migrate
    php artisan make:model Model/Section 
    php artisan make:controller Api/SectionController --resource
RestAPI Section CRUD 2
RestAPI Student CRUD 1
    php artisan make:migration create_students_table --create=students
    php artisan migrate
    php artisan make:model Model/Student
    php artisan make:controller Api/StudentController --resource
RestAPI Student CRUD 2
RestAPi JWT Token Login Method
    https://jwt-auth.readthedocs.io/en/docs/ -> laravel-installation
    https://www.positronx.io/laravel-jwt-authentication-tutorial-user-login-signup-api/
    composer require tymon/jwt-auth
    'providers' => [

        ...

        Tymon\JWTAuth\Providers\LaravelServiceProvider::class,
    ]
    Publish the config: 
        php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"
    Generate secret key
        php artisan jwt:secret
    Update User model
    Configure Auth guard
    Add some basic authentication routes
    Create the AuthController
        php artisan make:controller AuthController
    php artisan cache:clear
    php artisan config:cache
    http://vuejs_resful.xyz/api/auth/login
    